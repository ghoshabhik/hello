{"version":3,"sources":["components/Login.js","components/Contact.js","components/UserHeader.js","components/SearchContact.js","components/ContactList.js","components/ChatMessage.js","components/ChatArea.js","components/SendMessage.js","components/ChatBox.js","App.js","index.js"],"names":["Login","setUser","useState","username","setUsername","msg","setMsg","history","useHistory","logIn","path","push","handleLogInButton","e","a","fetch","res","json","data","setTimeout","console","log","handleRegisterButton","length","method","body","JSON","stringify","register","className","type","size","value","onChange","target","onClick","Contact","contact","onSelect","activeContact","classes","preventDefault","id","handleClick","style","fontSize","UserHeader","currentUser","to","SearchContact","onContactAdd","user","searchTerm","setSearchTerm","checkIfUserExists","q","currentusername","contacts","includes","contactname","addContact","contactData","user1","placeholder","handleSearch","ContactList","listItems","selectContact","selectedContact","contactList","setContactList","fetchContactList","useEffect","getContactList","map","ChatMessage","recepient","sender","messages","timeStamp","senderAlias","ChatArea","chatContext","currentSender","updateForNewMessage","msgArray","setMsgArray","senderId","textMessage","backgroundColor","height","overflow","overflowY","SendMessage","updateStateChatBox","messageText","setMessageText","handleSendButton","recepientIds","sentMessage","messageData","onKeyPress","event","key","ChatBox","setSelectedContact","newMessage","setNewMessage","width","margin","padding","App","setCurrentUser","exact","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2fbc9202.chunk.js","sourcesContent":["import { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport const Login = ( {setUser} ) => {\r\n\r\n    const [username, setUsername] = useState(\"\")\r\n    const [msg, setMsg] = useState(\"\")\r\n    const history = useHistory();\r\n    const logIn = (path) => {\r\n        setUser(username)\r\n        history.push(path)\r\n    }\r\n\r\n    const handleLogInButton = async (e) =>{\r\n        const res = await fetch(`https://604114f98339610007776bd6--stoic-kare-7b4cd1.netlify.app/api/check-user-exists?username=${username}`)\r\n        //console.log(res)\r\n        const data = await res.json()\r\n        //console.log(data)\r\n        if(data){\r\n            //console.log(data)\r\n            setMsg(`logging in..`)\r\n            setTimeout(\r\n                () => logIn('/hello/home'), \r\n                1000\r\n              );\r\n        } else {\r\n            console.log(data)\r\n            setMsg(`${username}: is not a registered user`)\r\n            //logIn('/')\r\n        }\r\n        \r\n    } \r\n\r\n    const handleRegisterButton = async (e) =>{\r\n        if(username.length < 4){\r\n            setMsg(`Username must be atleast 4 characters long`)\r\n        } else {\r\n            const res = await fetch(`https://604114f98339610007776bd6--stoic-kare-7b4cd1.netlify.app/api/check-user-exists?username=${username}`)\r\n            //console.log(res)\r\n            const data = await res.json()\r\n            //console.log(data)\r\n            if(!data){\r\n                //console.log(data)\r\n                const register = await fetch(`https://604114f98339610007776bd6--stoic-kare-7b4cd1.netlify.app/api/register-user`,{\r\n                    method: 'POST',\r\n                    body: JSON.stringify({username: `${username}`})\r\n                })\r\n                const registerdata = await register.json()\r\n                setMsg(`registering..`)\r\n                setTimeout(\r\n                    () => logIn('/hello/home'), \r\n                    2000\r\n                );\r\n                \r\n            } else {\r\n                console.log(data)\r\n                setMsg(`${username}: is already registered`)\r\n                //logIn('/')\r\n            }\r\n        }\r\n        \r\n        \r\n    } \r\n\r\n    return (\r\n        <div className=\"d-flex justify-content-center\" >\r\n            <div className=\"border border-success rounded m-5 p-5  bg-light\">\r\n                <h4 className=\"m-1\">Please create/use an username to login</h4>\r\n                <div>\r\n                    <input className=\"m-1\" \r\n                        type=\"text\" \r\n                        size=\"56\" \r\n                        value={username} \r\n                        onChange={(e) => {\r\n                            setUsername(e.target.value)\r\n                            //console.log(username)\r\n                        }}\r\n                    >\r\n                </input>\r\n                </div>   \r\n                <p>\r\n                    <button className=\"btn btn-secondary m-1\" onClick={ (e) => handleLogInButton(e) }>Login with this username</button>\r\n                    <button className=\"btn btn-dark m-1\" onClick={ (e) => handleRegisterButton(e) }>Register with this username</button><br/>\r\n                    <span className=\"text-danger\">{msg}</span>\r\n                </p>\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { useState, useEffect } from 'react'\r\nimport './../App.css';\r\n\r\nexport const Contact = ( {contact, onSelect, activeContact} ) => {\r\n    //const [active, setActive] = useState(\"\")\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault()\r\n        onSelect(e.target.id)\r\n        //setActive(e.target.id)\r\n        console.log(e.target.id)\r\n    }\r\n    let classes = (activeContact ===  contact ? ' active': '');\r\n    return (\r\n        <button \r\n        type=\"button\" \r\n        className={`list-group-item list-group-item-action ${classes}`} \r\n        key={contact}\r\n        onClick={ e=> handleClick(e)} \r\n        id={contact}>\r\n            {contact}-<span className=\"text-muted\" style={{fontSize: \"10px\"}} id={contact}>ONLINE STATUS</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Contact","import { Link } from 'react-router-dom'\r\n\r\nexport const UserHeader = ({currentUser}) => {\r\n    return (\r\n        <div className=\"my-3\">\r\n            Welcome <strong className=\"text-success\">{currentUser}</strong>{\" \"}\r\n            <Link to='/'>logoff</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserHeader","import { useState, useEffect } from 'react'\r\nexport const SearchContact = ({currentUser, onContactAdd}) => {\r\n\r\n    const [user, setUser] = useState(currentUser)\r\n    const [searchTerm, setSearchTerm] = useState(\"\")\r\n    const [msg, setMsg] = useState(\"\")\r\n    const [searchResult, setSearchResult] = useState([])\r\n\r\n\r\n    const checkIfUserExists = async (q, currentusername) => {\r\n        const res = await fetch(`https://604114f98339610007776bd6--stoic-kare-7b4cd1.netlify.app/api/check-user-exists?username=${q}`)\r\n        const data = await res.json()\r\n        if(data){\r\n            if(q == currentUser){\r\n                setMsg('Cannot add your own username to contactlist')\r\n            }\r\n            else{\r\n                if(data.contacts.includes(currentUser)){\r\n                    setMsg(`${q}: is already in your contact list..`)\r\n                }\r\n                else{\r\n                    setMsg(`${q}: found..`)\r\n                    const addContact = await fetch(`https://604114f98339610007776bd6--stoic-kare-7b4cd1.netlify.app/api/add-user-to-contact-list`,{\r\n                        method: 'POST',\r\n                        body: JSON.stringify({username: `${user}`, contactname: `${q}`})\r\n                    })\r\n                    const contactData = await addContact.json()\r\n                    onContactAdd(contactData.user1.contacts)\r\n                    setMsg(`${q}: added to contact list..`)\r\n                    console.log(contactData.user1.contacts)\r\n                }\r\n                \r\n            }\r\n            \r\n        } else {\r\n            setMsg(`${q}: not found..`)\r\n        }\r\n    }\r\n    \r\n    const handleSearch = (e) => {\r\n        e.preventDefault()\r\n        console.log(searchTerm)\r\n        console.log('user', currentUser)\r\n        checkIfUserExists(searchTerm, user)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form>\r\n                <div className=\"col-auto\">\r\n                    <div className=\"input-group mb-2\">\r\n                        \r\n                        <input type=\"text\" \r\n                        className=\"form-control\" \r\n                        id=\"inlineFormInputGroup\" \r\n                        placeholder=\"Add user to contact list\" \r\n                        onChange={(e) => setSearchTerm(e.target.value)}/>\r\n                        <button className=\"btn btn-secondary\" onClick={ (e) => handleSearch(e)}>➕</button>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </form>\r\n            <span className=\"text-dark\">{msg}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchContact","import { useState, useEffect } from 'react'\r\nimport Contact from './Contact'\r\nimport UserHeader from './UserHeader'\r\nimport SearchContact from './SearchContact'\r\n\r\nexport const ContactList = ( {user, selectContact, selectedContact} ) => {\r\n    const [currentUser, setCurrentUser] = useState(user)\r\n    const [contactList, setContactList] = useState([])\r\n    const [activeContact, setActiveContact] = useState(selectedContact)\r\n\r\n    let listItems\r\n\r\n\r\n\r\n    // Fetch Contact List\r\n    const fetchContactList = async () => {\r\n        const res = await fetch(`https://604114f98339610007776bd6--stoic-kare-7b4cd1.netlify.app/api/get-user-contact-list?username=${currentUser}`)\r\n        const data = await res.json()\r\n        setContactList(data.contacts)\r\n        return data.contacts\r\n    }\r\n\r\n    useEffect(() => {\r\n        //setActiveContact(selectedContact)\r\n        const getContactList = async () => {\r\n        const getUserContactList = await fetchContactList()\r\n        }\r\n        getContactList()\r\n    }, [])\r\n \r\n    listItems = contactList.map((contact) =>\r\n        <Contact contact={contact} onSelect={selectContact} activeContact={selectedContact}/>\r\n        )\r\n\r\n    return (\r\n        <div>\r\n            {/* {selectedContact} */}\r\n            <UserHeader currentUser={currentUser}/>\r\n            <SearchContact currentUser={currentUser} onContactAdd={setContactList}/>\r\n            <hr/>\r\n            <div className=\"list-group\">\r\n            {listItems}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactList","import React from 'react'\r\n\r\nexport const ChatMessage = ({recepient, sender, messages, timeStamp}) => {\r\n\r\n    let classes = recepient === sender ? 'd-flex justify-content-start' : 'd-flex justify-content-end'\r\n    let senderAlias = recepient === sender ? sender : 'You'\r\n    return (\r\n        <li className=\"list-group-item\">\r\n            <div className={`${classes}`}>\r\n                <strong>{senderAlias}: {\" \"}</strong> {messages} -- {timeStamp}\r\n            </div>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ChatMessage","import ChatMessage from './ChatMessage'\r\nimport { useState, useEffect } from 'react'\r\n\r\nexport const ChatArea = ({chatContext, currentSender, updateForNewMessage}) => {\r\n    const [msgArray, setMsgArray] = useState([])\r\n\r\n\r\n    useEffect( async () =>{\r\n        if(chatContext == \"\"){\r\n            console.log(`${chatContext} -- Will not make the api call`)\r\n        } else{\r\n            console.log(`${chatContext} -- Will make the api call`)\r\n            const res = await fetch(`https://604114f98339610007776bd6--stoic-kare-7b4cd1.netlify.app/api/get-message-by-sender-recepient-ids?recepientId=${chatContext}&senderId=${currentSender}`)\r\n            const data = await res.json()\r\n            setMsgArray(data)\r\n            console.log(data)\r\n        }\r\n    },[chatContext, updateForNewMessage])\r\n\r\n    let listItems = msgArray.map((msg) =>\r\n        <ChatMessage recepient={chatContext} sender={msg.senderId} messages={msg.textMessage} timeStamp={msg.timeStamp}/>\r\n        )\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"border w-100 mt-5\" style={{backgroundColor:\"#E5DDD5\",  height:\"690px\", overflow:\"hidden\", overflowY:\"scroll\"}}>\r\n                <ul className=\"list-group\" >\r\n                    {/* <li className=\"list-group-item\"><div className=\"d-flex justify-content-end\">{currentSender}--{chatContext}Hello</div></li>\r\n                    <li className=\"list-group-item\"><div className=\"d-flex justify-content-start\">Right aligned text on all viewport sizes.</div></li>\r\n                    <li className=\"list-group-item\"><div className=\"d-flex justify-content-end\">Right aligned text on all viewport sizes.</div></li> */}\r\n                    {/* <ChatMessage recepient={chatContext} sender={currentSender} messages={msgArray}/> */}\r\n                    {listItems}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ChatArea","import { useState, useEffect } from 'react'\r\n\r\nexport const SendMessage = ({chatContext, currentSender, updateStateChatBox}) => {\r\n\r\n    const [messageText, setMessageText] = useState(\"\")\r\n\r\n    const handleSendButton = async (e) => {\r\n        //e.preventDefault()\r\n        console.log('Message: ',messageText)\r\n        const sentMessage = await fetch(`https://604114f98339610007776bd6--stoic-kare-7b4cd1.netlify.app/api/create-message`,{\r\n                    method: 'POST',\r\n                    body: JSON.stringify(\r\n                        {\r\n                            textMessage: messageText,\r\n                            senderId: currentSender,\r\n                            recepientIds:[chatContext]\r\n                        })\r\n                })\r\n                const messageData = await sentMessage.json()\r\n                updateStateChatBox(messageData)\r\n        setMessageText(\"\")        \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"mt-2 mr-2\">\r\n            <div className=\"input-group mb-3 mr-2\">\r\n            <input \r\n            type=\"text\" \r\n            className=\"form-control\" \r\n            placeholder=\"Type your messages\"\r\n            value={messageText}\r\n            onChange={(e) => setMessageText(e.target.value)} \r\n            onKeyPress={event => {\r\n                if (event.key === 'Enter') {\r\n                  console.log('Enter Pressed')\r\n                  handleSendButton(event)\r\n                }\r\n              }}\r\n            />\r\n            <div className=\"input-group-append\">\r\n                <button className=\"btn btn-outline-secondary\" \r\n                onClick={\r\n                    (e) => {\r\n                        e.preventDefault()\r\n                        handleSendButton(e)\r\n                        }}>\r\n                Send</button>\r\n            </div>\r\n            {/* {messageText} */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SendMessage\r\n","import { useState, useEffect } from 'react'\r\nimport ContactList from './ContactList'\r\nimport ChatArea from './ChatArea'\r\nimport SendMessage from './SendMessage'\r\nexport const ChatBox = ( {setUser} ) => {\r\n    const [currentUser, setCurrentUser] = useState(setUser)\r\n    const [selectedContact, setSelectedContact] = useState(\"\")\r\n    const [newMessage, setNewMessage] = useState({})\r\n    \r\n    return (\r\n        <div className=\"row border border-success rounded\" style={{backgroundColor: \"#EDEDED\", height:\"840px\", width:\"100%\"}}>\r\n            \r\n            <div className=\"col-3\">\r\n            \r\n                <ContactList user={currentUser} selectContact={setSelectedContact} selectedContact={selectedContact}/>\r\n            </div>\r\n            <div className=\"col-9 \" style={{margin:\"0px\", padding: \"6px\"}}>\r\n            {/* Chat Context - {currentUser} -- {selectedContact} */}\r\n                <ChatArea chatContext={selectedContact} currentSender={currentUser} updateForNewMessage={newMessage}/>\r\n                <SendMessage chatContext={selectedContact} currentSender={currentUser} updateStateChatBox={setNewMessage}/>\r\n            </div>\r\n            <div className=\"mb-2\">💡 VERSION: 0.0.1. Next version will include: Group chat and multimedia messages</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatBox","import { useState, useEffect } from 'react'\nimport './App.css';\nimport TopBar from './components/TopBar'\nimport Login from './components/Login'\nimport ChatBox from './components/ChatBox'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n\nfunction App() {\n\n  const [currentUser, setCurrentUser] = useState(\"\")\n  \n\n  const setUser = (user) => {\n    console.log(user)\n    setCurrentUser(user)\n  }\n\n  \n\n  \n\n  return (\n    <Router >\n      <Route path='/' exact render = { (props) => (\n          <>\n            <Login setUser={setUser}/>\n            \n          </>\n        ) }\n      />\n\n      <Route path='/home' render = {(props) => (\n          <>\n          <div className=\"App\">\n            <div className=\"container\" style={{ height: \"100vh\"}} >\n              <div>\n                <div>&copy; abhik</div>\n                <div></div>\n                <div className=\"mt-4\">\n                  <ChatBox setUser={currentUser}/> \n                  {/* <div>Current User: {currentUser}</div> */}\n                </div>\n              </div>\n            </div>\n         </div>\n          </>\n        )}\n      />  \n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}